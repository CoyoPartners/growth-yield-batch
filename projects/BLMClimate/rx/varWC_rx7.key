STDIDENT
{{condid}} {{variant}}_{{rx}}_{{condid}}_{{site_class}}_{{climate}}_{{offset}}
{{stdinfo}}
STANDCN
{{variant}}_{{rx}}_{{condid}}_{{site_class}}_{{climate}}_{{offset}}

* Define input formats, open treelist, basic model parameters
{{include.inputs_formats}}
TREEDATA          50
OPEN              50
{{condid}}.fvs
TREEDATA          50

* Call treelist outputs, edits to main output file
{{include.treelists_outputs}}

* Override default site index.
{{sitecode}}

* Define maximum Stand Density Index
{{include.WC_SDIMAX}}

COMMENT
Define "OFFSET" value, should be 0 or in multiples of 5 (cycle length).
END
COMPUTE
OFFSET = {{offset}}
END

COMMENT
Determine the year in which repeated commercial thinnings commence (REGENYR).
END
IF               999
BSDI GE 0.35*BSDIMAX AND (1-((BSDIMAX*0.35)/BSDI))*BBDFT GE 8000
THEN
AGPLABEL
All
COMPUTE
CYC1 = CYCLE
END
ENDIF
IF               999
AGE GE 30 AND CYCLE LE CYC1
THEN
AGPLABEL
All
COMPUTE
REGENYR = YEAR + OFFSET
END
ENDIF
IF               999
AGE LT 30 AND CYCLE LE CYC1
THEN 
AGPLABEL
All
COMPUTE
REGENYR = (30 + OFFSET - AGE) + YEAR
END
ENDIF

COMMENT
Create a code indicating what type (if any) of harvesting occurred each cycle.
CUT_TYPE codes:
0 = No cut this cycle
1 = Pre-commercial thin this cycle
2 = Commercial thin this cycle
3 = Regeneration harvest this cycle
END
IF 
EVPHASE EQ 2
THEN
AGPLABEL
All
COMPUTE            0
CUT_TYPE = LININT(Age,30+OFFSET,30+OFFSET,0,2)*CUT
END
ENDIF

* Set log grades and merchantability parameters. 
{{include.WC_merch}}

* Compute fire hazard rating
{{include.fire_hazard}}

COMMENT
Trigger climate change impacts.
Climate Scenario = {{climate}}
END
CLIMATE
CLIMDATA
{{climate}}
{{condid}}.cli
CLIMREPT
AUTOESTB
{{include.climate_mortality}}
END

COMMENT
Create carbon reports with units of metric tonnes C per acre.
END
FMIN
CARBREPT                               5
CARBCUT                                5   
CARBCALC           0         2
END

COMMENT
Turn off diameter and height growth calibration.
END
NOCALIB

COMMENT
Define conifers as a species group.  WC variant.
END
SPGROUP       CONSPP
SF WF GF AF RF NF YC IC ES LP JP SP WP PP PY DF RW RC WH WJ LL WB KP

* Compute variables used as inputs for cost model.
{{include.cost_model_inputs}}

* Compute Northern spotted owl ratings.
{{include.WC_spotted_owl}}

* Compute pine beetle hazard ratings.
{{include.ponderosa_beetle}}
{{include.lodgepole_beetle}}

* Compute spruce beetle hazard rating.
{{include.spruce_beetle}}

* Compute species diversity metrics.
{{include.WC_diversity}}

COMMENT
Set species preferences for thinning.
END
SPECPREF           1        WJ        50
SPECPREF           1        WF        50

COMMENT
Simulate thin from below every 25 years after age 30 to achieve complex uneven-age
forest structure.  Reverse J-shape diameter distribution targeting 35% maximum SDI.
Adapted from script by Don Vandendriesche.
END
*   Definition of Compute Variables:
*    _SDI = Target Stand Density Index (calculated based on conditional statement further below)
*      _Q = Q-Factor
*     _DB = Minimum Diameter Class
*     _DE = Maximum Diameter Class
*     _DI = Diameter Class Interval
*      _C = 0.00545415 (BA conversion constant)
*      _E = 1.605 SDI Exponent
COMPUTE            1
_Q  =1.40
_DB =2.5
_DE =47.5
_DI =5
_E  =1.605
_X20=((LININT(LININT &
     (MAX((_DE-(_DI*00)),0),(_DB-_DI)+((_DB-_DI)/1000), &
     (_DB-_DI)+((_DB-_DI)/1000),0,1),1,1,0, &
     MAX((LININT(_DE-(_DI*00),0,0,_DE-(_DI*00),MAX(_DE-(_DI*00),_DB/2)),0)))) &
     /10)**_E*_Q**00
_X19=((LININT(LININT &
     (MAX((_DE-(_DI*01)),0),(_DB-_DI)+((_DB-_DI)/1000), &
     (_DB-_DI)+((_DB-_DI)/1000),0,1),1,1,0, &
     MAX((LININT(_DE-(_DI*01),0,0,_DE-(_DI*01),MAX(_DE-(_DI*01),_DB/2)),0)))) &
     /10)**_E*_Q**01
_X18=((LININT(LININT &
     (MAX((_DE-(_DI*02)),0),(_DB-_DI)+((_DB-_DI)/1000), &
     (_DB-_DI)+((_DB-_DI)/1000),0,1),1,1,0, &
     MAX((LININT(_DE-(_DI*02),0,0,_DE-(_DI*02),MAX(_DE-(_DI*02),_DB/2)),0)))) &
     /10)**_E*_Q**02
_X17=((LININT(LININT &
     (MAX((_DE-(_DI*03)),0),(_DB-_DI)+((_DB-_DI)/1000), &
     (_DB-_DI)+((_DB-_DI)/1000),0,1),1,1,0, &
     MAX((LININT(_DE-(_DI*03),0,0,_DE-(_DI*03),MAX(_DE-(_DI*03),_DB/2)),0)))) &
     /10)**_E*_Q**03
_X16=((LININT(LININT &
     (MAX((_DE-(_DI*04)),0),(_DB-_DI)+((_DB-_DI)/1000), &
     (_DB-_DI)+((_DB-_DI)/1000),0,1),1,1,0, &
     MAX((LININT(_DE-(_DI*04),0,0,_DE-(_DI*04),MAX(_DE-(_DI*04),_DB/2)),0)))) &
     /10)**_E*_Q**04
_X15=((LININT(LININT &
     (MAX((_DE-(_DI*05)),0),(_DB-_DI)+((_DB-_DI)/1000), &
     (_DB-_DI)+((_DB-_DI)/1000),0,1),1,1,0, &
     MAX((LININT(_DE-(_DI*05),0,0,_DE-(_DI*05),MAX(_DE-(_DI*05),_DB/2)),0)))) &
     /10)**_E*_Q**05
_X14=((LININT(LININT &
     (MAX((_DE-(_DI*06)),0),(_DB-_DI)+((_DB-_DI)/1000), &
     (_DB-_DI)+((_DB-_DI)/1000),0,1),1,1,0, &
     MAX((LININT(_DE-(_DI*06),0,0,_DE-(_DI*06),MAX(_DE-(_DI*06),_DB/2)),0)))) &
     /10)**_E*_Q**06
_X13=((LININT(LININT &
     (MAX((_DE-(_DI*07)),0),(_DB-_DI)+((_DB-_DI)/1000), &
     (_DB-_DI)+((_DB-_DI)/1000),0,1),1,1,0, &
     MAX((LININT(_DE-(_DI*07),0,0,_DE-(_DI*07),MAX(_DE-(_DI*07),_DB/2)),0)))) &
     /10)**_E*_Q**07
_X12=((LININT(LININT &
     (MAX((_DE-(_DI*08)),0),(_DB-_DI)+((_DB-_DI)/1000), &
     (_DB-_DI)+((_DB-_DI)/1000),0,1),1,1,0, &
     MAX((LININT(_DE-(_DI*08),0,0,_DE-(_DI*08),MAX(_DE-(_DI*08),_DB/2)),0)))) &
     /10)**_E*_Q**08
_X11=((LININT(LININT &
     (MAX((_DE-(_DI*09)),0),(_DB-_DI)+((_DB-_DI)/1000), &
     (_DB-_DI)+((_DB-_DI)/1000),0,1),1,1,0, &
     MAX((LININT(_DE-(_DI*09),0,0,_DE-(_DI*09),MAX(_DE-(_DI*09),_DB/2)),0)))) &
     /10)**_E*_Q**09
END

IF                 25
AGE GE 30 AND YEAR GE REGENYR AND (1-((BSDIMAX*0.35)/BSDI))*BBDFT GE 8000
THEN
AGPLABEL
All
COMPUTE            0
_SDI=0.35*BSDIMAX
_T20=LININT(LININT(_X20,0.001,0.001,0,1),1,1,0, &
     (MAX((SpMcDBH(1,All,0,LININT(MAX((_DE-(_DI*00))-_DI/2,0), &
      _DI,_DI,0.001,MAX((_DE-(_DI*00))-_DI/2,0)), &
      MAX((_DE-(_DI*00))+_DI/2,0),0.0,999.0,0)),0)))
_T19=LININT(LININT(_X19,0.001,0.001,0,1),1,1,0, &
     (MAX((SpMcDBH(1,All,0,LININT(MAX((_DE-(_DI*01))-_DI/2,0), &
      _DI,_DI,0.001,MAX((_DE-(_DI*01))-_DI/2,0)), &
      MAX((_DE-(_DI*01))+_DI/2,0),0.0,999.0,0)),0)))
_T18=LININT(LININT(_X18,0.001,0.001,0,1),1,1,0, &
     (MAX((SpMcDBH(1,All,0,LININT(MAX((_DE-(_DI*02))-_DI/2,0), &
      _DI,_DI,0.001,MAX((_DE-(_DI*02))-_DI/2,0)), &
      MAX((_DE-(_DI*02))+_DI/2,0),0.0,999.0,0)),0)))
_T17=LININT(LININT(_X17,0.001,0.001,0,1),1,1,0, &
     (MAX((SpMcDBH(1,All,0,LININT(MAX((_DE-(_DI*03))-_DI/2,0), &
      _DI,_DI,0.001,MAX((_DE-(_DI*03))-_DI/2,0)), &
      MAX((_DE-(_DI*03))+_DI/2,0),0.0,999.0,0)),0)))
_T16=LININT(LININT(_X16,0.001,0.001,0,1),1,1,0, &
     (MAX((SpMcDBH(1,All,0,LININT(MAX((_DE-(_DI*04))-_DI/2,0), &
      _DI,_DI,0.001,MAX((_DE-(_DI*04))-_DI/2,0)), &
      MAX((_DE-(_DI*04))+_DI/2,0),0.0,999.0,0)),0)))
_T15=LININT(LININT(_X15,0.001,0.001,0,1),1,1,0, &
     (MAX((SpMcDBH(1,All,0,LININT(MAX((_DE-(_DI*05))-_DI/2,0), &
      _DI,_DI,0.001,MAX((_DE-(_DI*05))-_DI/2,0)), &
      MAX((_DE-(_DI*05))+_DI/2,0),0.0,999.0,0)),0)))
_T14=LININT(LININT(_X14,0.001,0.001,0,1),1,1,0, &
     (MAX((SpMcDBH(1,All,0,LININT(MAX((_DE-(_DI*06))-_DI/2,0), &
      _DI,_DI,0.001,MAX((_DE-(_DI*06))-_DI/2,0)), &
      MAX((_DE-(_DI*06))+_DI/2,0),0.0,999.0,0)),0)))
_T13=LININT(LININT(_X13,0.001,0.001,0,1),1,1,0, &
     (MAX((SpMcDBH(1,All,0,LININT(MAX((_DE-(_DI*07))-_DI/2,0), &
      _DI,_DI,0.001,MAX((_DE-(_DI*07))-_DI/2,0)), &
      MAX((_DE-(_DI*07))+_DI/2,0),0.0,999.0,0)),0)))
_T12=LININT(LININT(_X12,0.001,0.001,0,1),1,1,0, &
     (MAX((SpMcDBH(1,All,0,LININT(MAX((_DE-(_DI*08))-_DI/2,0), &
      _DI,_DI,0.001,MAX((_DE-(_DI*08))-_DI/2,0)), &
      MAX((_DE-(_DI*08))+_DI/2,0),0.0,999.0,0)),0)))
_T11=LININT(LININT(_X11,0.001,0.001,0,1),1,1,0, &
     (MAX((SpMcDBH(1,All,0,LININT(MAX((_DE-(_DI*09))-_DI/2,0), &
      _DI,_DI,0.001,MAX((_DE-(_DI*09))-_DI/2,0)), &
      MAX((_DE-(_DI*09))+_DI/2,0),0.0,999.0,0)),0)))
_S20=_T20*((LININT(LININT(_X20,0.001,0.001,0,1),1,1,0, &
     (MAX((SpMcDBH(5,All,0,LININT(MAX((_DE-(_DI*00))-_DI/2,0), &
      _DI,_DI,0.001,MAX((_DE-(_DI*00))-_DI/2,0)), &
      MAX((_DE-(_DI*00))+_DI/2,0),0.0,999.0,0)),0)))/10)**_E)
_S19=_T19*((LININT(LININT(_X19,0.001,0.001,0,1),1,1,0, &
     (MAX((SpMcDBH(5,All,0,LININT(MAX((_DE-(_DI*01))-_DI/2,0), &
      _DI,_DI,0.001,MAX((_DE-(_DI*01))-_DI/2,0)), &
      MAX((_DE-(_DI*01))+_DI/2,0),0.0,999.0,0)),0)))/10)**_E)
_S18=_T18*((LININT(LININT(_X18,0.001,0.001,0,1),1,1,0, &
     (MAX((SpMcDBH(5,All,0,LININT(MAX((_DE-(_DI*02))-_DI/2,0), &
      _DI,_DI,0.001,MAX((_DE-(_DI*02))-_DI/2,0)), &
      MAX((_DE-(_DI*02))+_DI/2,0),0.0,999.0,0)),0)))/10)**_E)
_S17=_T17*((LININT(LININT(_X17,0.001,0.001,0,1),1,1,0, &
     (MAX((SpMcDBH(5,All,0,LININT(MAX((_DE-(_DI*03))-_DI/2,0), &
      _DI,_DI,0.001,MAX((_DE-(_DI*03))-_DI/2,0)), &
      MAX((_DE-(_DI*03))+_DI/2,0),0.0,999.0,0)),0)))/10)**_E)
_S16=_T16*((LININT(LININT(_X16,0.001,0.001,0,1),1,1,0, &
     (MAX((SpMcDBH(5,All,0,LININT(MAX((_DE-(_DI*04))-_DI/2,0), &
      _DI,_DI,0.001,MAX((_DE-(_DI*04))-_DI/2,0)), &
      MAX((_DE-(_DI*04))+_DI/2,0),0.0,999.0,0)),0)))/10)**_E)
_S15=_T15*((LININT(LININT(_X15,0.001,0.001,0,1),1,1,0, &
     (MAX((SpMcDBH(5,All,0,LININT(MAX((_DE-(_DI*05))-_DI/2,0), &
      _DI,_DI,0.001,MAX((_DE-(_DI*05))-_DI/2,0)), &
      MAX((_DE-(_DI*05))+_DI/2,0),0.0,999.0,0)),0)))/10)**_E)
_S14=_T14*((LININT(LININT(_X14,0.001,0.001,0,1),1,1,0, &
     (MAX((SpMcDBH(5,All,0,LININT(MAX((_DE-(_DI*06))-_DI/2,0), &
      _DI,_DI,0.001,MAX((_DE-(_DI*06))-_DI/2,0)), &
      MAX((_DE-(_DI*06))+_DI/2,0),0.0,999.0,0)),0)))/10)**_E)
_S13=_T13*((LININT(LININT(_X13,0.001,0.001,0,1),1,1,0, &
     (MAX((SpMcDBH(5,All,0,LININT(MAX((_DE-(_DI*07))-_DI/2,0), &
      _DI,_DI,0.001,MAX((_DE-(_DI*07))-_DI/2,0)), &
      MAX((_DE-(_DI*07))+_DI/2,0),0.0,999.0,0)),0)))/10)**_E)
_S12=_T12*((LININT(LININT(_X12,0.001,0.001,0,1),1,1,0, &
     (MAX((SpMcDBH(5,All,0,LININT(MAX((_DE-(_DI*08))-_DI/2,0), &
      _DI,_DI,0.001,MAX((_DE-(_DI*08))-_DI/2,0)), &
      MAX((_DE-(_DI*08))+_DI/2,0),0.0,999.0,0)),0)))/10)**_E)
_S11=_T11*((LININT(LININT(_X11,0.001,0.001,0,1),1,1,0, &
     (MAX((SpMcDBH(5,All,0,LININT(MAX((_DE-(_DI*09))-_DI/2,0), &
      _DI,_DI,0.001,MAX((_DE-(_DI*09))-_DI/2,0)), &
      MAX((_DE-(_DI*09))+_DI/2,0),0.0,999.0,0)),0)))/10)**_E)
_ASDI=_S20+_S19+_S18+_S17+_S16+_S15+_S14+_S13+_S12+_S11
END
ENDIF

* Compute Conversion Factor, Target SDI, and Excess SDI
IF                25
AGE GE 30 AND YEAR GE REGENYR AND _ASDI GE _SDI AND (1-((BSDIMAX*0.35)/BSDI))*BBDFT GE 8000
THEN
AGPLABEL
All
COMPUTE            0
_CF=_SDI/(_X20+_X19+_X18+_X17+_X16+_X15+_X14+_X13+_X12+_X11)
_Y20=_X20*_CF
_Y19=_X19*_CF
_Y18=_X18*_CF
_Y17=_X17*_CF
_Y16=_X16*_CF
_Y15=_X15*_CF
_Y14=_X14*_CF
_Y13=_X13*_CF
_Y12=_X12*_CF
_Y11=_X11*_CF
_TSDI=_Y20+_Y19+_Y18+_Y17+_Y16+_Y15+_Y14+_Y13+_Y12+_Y11
_Z20=MAX(_S20-_Y20,0)
_Z19=MAX(_S19-_Y19,0)
_Z18=MAX(_S18-_Y18,0)
_Z17=MAX(_S17-_Y17,0)
_Z16=MAX(_S16-_Y16,0)
_Z15=MAX(_S15-_Y15,0)
_Z14=MAX(_S14-_Y14,0)
_Z13=MAX(_S13-_Y13,0)
_Z12=MAX(_S12-_Y12,0)
_Z11=MAX(_S11-_Y11,0)
_ZSDI=(_ASDI-_TSDI)/MAX(1,(_Z20+_Z19+_Z18+_Z17+_Z16+_Z15+_Z14+_Z13+_Z12+_Z11))
END
** Sets Thinning through all DBH Classes
* Managed DBH Classes
MINHARV            1                8000
ThinBTA            0   Parms(LININT(LININT(_Y20,0.001,0.001,0,1),1,1,999.0, &
(_Y20+(_Z20-_Z20*_ZSDI))/(MAX(_X20,0.000001)/_Q**00)),1.00, &
LININT(MAX((_DE-(_DI*00))-_DI/2,0), &
_DI,_DI,0.001,MAX((_DE-(_DI*00))-_DI/2,0)), &
MAX((_DE-(_DI*00))+_DI/2,0),0,999)
ThinBTA            0   Parms(LININT(LININT(_Y19,0.001,0.001,0,1),1,1,999.0, &
(_Y19+(_Z19-_Z19*_ZSDI))/(MAX(_X19,0.000001)/_Q**01)),1.00, &
LININT(MAX((_DE-(_DI*01))-_DI/2,0), &
_DI,_DI,0.001,MAX((_DE-(_DI*01))-_DI/2,0)), &
MAX((_DE-(_DI*01))+_DI/2,0),0,999)
ThinBTA            0   Parms(LININT(LININT(_Y18,0.001,0.001,0,1),1,1,999.0, &
(_Y18+(_Z18-_Z18*_ZSDI))/(MAX(_X18,0.000001)/_Q**02)),1.00, &
LININT(MAX((_DE-(_DI*02))-_DI/2,0), &
_DI,_DI,0.001,MAX((_DE-(_DI*02))-_DI/2,0)), &
MAX((_DE-(_DI*02))+_DI/2,0),0,999)
ThinBTA            0   Parms(LININT(LININT(_Y17,0.001,0.001,0,1),1,1,999.0, &
(_Y17+(_Z17-_Z17*_ZSDI))/(MAX(_X17,0.000001)/_Q**03)),1.00, &
LININT(MAX((_DE-(_DI*03))-_DI/2,0), &
_DI,_DI,0.001,MAX((_DE-(_DI*03))-_DI/2,0)), &
MAX((_DE-(_DI*03))+_DI/2,0),0,999)
ThinBTA            0   Parms(LININT(LININT(_Y16,0.001,0.001,0,1),1,1,999.0, &
(_Y16+(_Z16-_Z16*_ZSDI))/(MAX(_X16,0.000001)/_Q**04)),1.00, &
LININT(MAX((_DE-(_DI*04))-_DI/2,0), &
_DI,_DI,0.001,MAX((_DE-(_DI*04))-_DI/2,0)), &
MAX((_DE-(_DI*04))+_DI/2,0),0,999)
ThinBTA            0   Parms(LININT(LININT(_Y15,0.001,0.001,0,1),1,1,999.0, &
(_Y15+(_Z15-_Z15*_ZSDI))/(MAX(_X15,0.000001)/_Q**05)),1.00, &
LININT(MAX((_DE-(_DI*05))-_DI/2,0), &
_DI,_DI,0.001,MAX((_DE-(_DI*05))-_DI/2,0)), &
MAX((_DE-(_DI*05))+_DI/2,0),0,999)
ThinBTA            0   Parms(LININT(LININT(_Y14,0.001,0.001,0,1),1,1,999.0, &
(_Y14+(_Z14-_Z14*_ZSDI))/(MAX(_X14,0.000001)/_Q**06)),1.00, &
LININT(MAX((_DE-(_DI*06))-_DI/2,0), &
_DI,_DI,0.001,MAX((_DE-(_DI*06))-_DI/2,0)), &
MAX((_DE-(_DI*06))+_DI/2,0),0,999)
ThinBTA            0   Parms(LININT(LININT(_Y13,0.001,0.001,0,1),1,1,999.0, &
(_Y13+(_Z13-_Z13*_ZSDI))/(MAX(_X13,0.000001)/_Q**07)),1.00, &
LININT(MAX((_DE-(_DI*07))-_DI/2,0), &
_DI,_DI,0.001,MAX((_DE-(_DI*07))-_DI/2,0)), &
MAX((_DE-(_DI*07))+_DI/2,0),0,999)
ThinBTA            0   Parms(LININT(LININT(_Y12,0.001,0.001,0,1),1,1,999.0, &
(_Y12+(_Z12-_Z12*_ZSDI))/(MAX(_X12,0.000001)/_Q**08)),1.00, &
LININT(MAX((_DE-(_DI*08))-_DI/2,0), &
_DI,_DI,0.001,MAX((_DE-(_DI*08))-_DI/2,0)), &
MAX((_DE-(_DI*08))+_DI/2,0),0,999)
ThinBTA            0   Parms(LININT(LININT(_Y11,0.001,0.001,0,1),1,1,999.0, &
(_Y11+(_Z11-_Z11*_ZSDI))/(MAX(_X11,0.000001)/_Q**09)),1.00, &
LININT(MAX((_DE-(_DI*09))-_DI/2,0), &
_DI,_DI,0.001,MAX((_DE-(_DI*09))-_DI/2,0)), &
MAX((_DE-(_DI*09))+_DI/2,0),0,999)
ENDIF

PROCESS
CLOSE             50
STOP