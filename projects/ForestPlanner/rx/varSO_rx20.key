STDIDENT
{{condid}} {{variant}}_{{rx}}_{{condid}}_{{site_class}}_{{offset}}
{{stdinfo}}
STANDCN
{{variant}}_{{rx}}_{{condid}}_{{site_class}}_{{offset}}

* Define input formats, open treelist, basic model parameters
{{include.inputs_formats}}
TREEDATA          50
OPEN              50
{{condid}}.fvs
TREEDATA          50

* Call treelist outputs, edits to main output file
{{include.treelists_outputs}}

* Override default site index.
{{sitecode}}


{{include.SO_SDIMAX}}


COMMENT
Define "Offset" value, should be 0 or in multiples of 5 (cycle length).
END
COMPUTE
Offset = 0
END

COMMENT
Determine the year in which repeated commercial thinnings commence (REGENYR).
END
IF               999
BSDI GE 0.65*BSDIMAX
THEN
AGPLABEL
All
COMPUTE
CYC1 = CYCLE
END
ENDIF
IF               999
AGE GE 30 AND CYCLE LE CYC1
THEN
AGPLABEL
All
COMPUTE
REGENYR = YEAR + OFFSET
END
ENDIF
IF               999
AGE LT 30 AND CYCLE EQ 1
THEN 
AGPLABEL
All
COMPUTE
REGENYR = (30 + OFFSET - AGE) + YEAR
END
ENDIF

COMMENT
Create a code indicating what type (if any) of harvesting occurred each cycle.
CUT_TYPE codes:
0 = No cut this cycle
1 = Pre-commercial thin this cycle
2 = Commercial thin this cycle
3 = Regeneration harvest this cycle
END
IF 
EVPHASE EQ 2
THEN
AGPLABEL
All
COMPUTE            0
CUT_TYPE = LININT(Age,30+Offset,30+Offset,0,2)*CUT
END
ENDIF


{{include.SO_merch}}

COMMENT
ECON extension used to calculate total boardfoot and cubic foot
volumes harvested for each merchantable species.  Suitable for 
calculating pulp and "camp run" sawlog revenues.
END
ECON
STRTECON           1  
HRVRVN             0         2
HRVRVN             0         3
END

COMMENT
ECON extension used to break PP harvest volumes into diameter classes.
Based on OSU Extension Oregon Log Market Report diameter classes.
END
ECON
HRVRVN             0         4         6        PP
HRVRVN             0         4        12        PP
HRVRVN             0         4        18        PP
HRVRVN             0         4        24        PP
END

COMMENT
Compute harvested boardfoot volumes by species groups.
END
COMPUTE            0
CEDR_HRV = 0+SPMCDBH(4,IC,0,0,999,0,999,2)
DF_HRV = 0+SPMCDBH(4,DF,0,0,999,0,999,2)+SPMCDBH(4,WL,0,0,999,0,999,2)
HW_HRV = 0
MNCONHRV = 0+SPMCDBH(4,SP,0,0,999,0,999,2)+SPMCDBH(4,WF,0,0,999,0,999,2)
MNHW_HRV = 0+SPMCDBH(4,BM,0,0,999,0,999,2)+SPMCDBH(4,CH,0,0,999,0,999,2)&
+SPMCDBH(4,RA,0,0,999,0,999,2)+SPMCDBH(4,WO,0,0,999,0,999,2)
PINE_HRV = 0+SPMCDBH(4,PP,0,0,999,0,999,2)+SPMCDBH(4,LP,0,0,999,0,999,2)
SPRC_HRV = 0+SPMCDBH(4,ES,0,0,999,0,999,2)
WJ_HRV = 0+SPMCDBH(4,WJ,0,0,999,0,999,2)
WW_HRV = 0+SPMCDBH(4,GF,0,0,999,0,999,2)+SPMCDBH(4,NF,0,0,999,0,999,2)
END

COMMENT
Compute standing boardfoot volumes by species groups.
END
COMPUTE            0
CEDR_BF = 0+SPMCDBH(4,IC,0,0,999,0,999,3)
DF_BF = 0+SPMCDBH(4,DF,0,0,999,0,999,3)+SPMCDBH(4,WL,0,0,999,0,999,3)
HW_BF = 0
MNCONBF = 0+SPMCDBH(4,SP,0,0,999,0,999,3)+SPMCDBH(4,WF,0,0,999,0,999,3)
MNHW_BF = 0+SPMCDBH(4,BM,0,0,999,0,999,3)+SPMCDBH(4,CH,0,0,999,0,999,3)&
+SPMCDBH(4,RA,0,0,999,0,999,3)+SPMCDBH(4,WO,0,0,999,0,999,3)
PINE_BF = 0+SPMCDBH(4,PP,0,0,999,0,999,3)+SPMCDBH(4,LP,0,0,999,0,999,3)
SPRC_BF = 0+SPMCDBH(4,ES,0,0,999,0,999,3)
WJ_BF = 0+SPMCDBH(4,WJ,0,0,999,0,999,3)
WW_BF = 0+SPMCDBH(4,GF,0,0,999,0,999,3)+SPMCDBH(4,NF,0,0,999,0,999,3)
END


{{include.fire_hazard}}

COMMENT
Create Carbon Reports with units of metric tonnes C per acre.
END
FMIN
CARBREPT                               5
CARBCUT                                5   
CARBCALC           0         2
END

COMMENT
Turn off diameter and height growth calibration and dwarf mistletoe components.
END
NOCALIB
MISTOE
MISTOFF
END


COMMENT
Define conifers as a species group.  SO variant.
END
SPGROUP       CONSPP
DF ES IC LP MH NF OS PP PY RC SF SH SP WB WF WH WJ WL WP


{{include.cost_model_inputs}}



{{include.SO_spotted_owl}}


{{include.lodgepole_beetle}}

{{include.ponderosa_beetle}}

{{include.spruce_beetle}}



{{include.SO_diversity}}

COMMENT
Preferentially remove WJ in any cutting, only applies to thin from below,
or thin from above.  Does not apply when thinning throughout a diameter
distribution.
END
SPECPREF           1        WJ        50

COMMENT
Simulate thin from below every 10 years after age 30 to achieve complex uneven-age
forest structure.  Reverse J-shape diameter distribution targeting 65% maximum SDI.
Pile and burn slash after harvesting.  Adapted from script by Don Vandendriesche.
END
IF                10
AGE GE 30 AND YEAR GE REGENYR
THEN
AGPLABEL
All
*   Definition of Compute Variables:
*    _SDI = Target Stand Density Index
*      _Q = Q-Factor
*     _DB = Minimum Diameter Class
*     _DE = Maximum Diameter Class
*     _DI = Diameter Class Interval
*    _LLT = Number of Legacy Trees
*    _LLD = Diameter of Legacy Trees
*      _C = 0.00545415 (BA conversion constant)
*      _E = 1.605 SDI Exponent
COMPUTE            1
_SDI=0.55*BSDIMAX
_Q  =1.4
_DB =0
_DE =25
_DI =5
_LLT=12.
_LLD=40.
_C  =0.00545415
_E  =1.605
END
ENDIF

* Compute Actual SDI, DBH Classes, Trial TPA, and Trial SDI/DBH CLASS
IF                 10
AGE GE 30 AND YEAR GE REGENYR
THEN
AGPLABEL
All
COMPUTE            0
_X20=((LININT(LININT &
     (MAX((_DE-(_DI*00)),0),(_DB-_DI)+((_DB-_DI)/1000), &
     (_DB-_DI)+((_DB-_DI)/1000),0,1),1,1,0, &
     MAX((LININT(_DE-(_DI*00),0,0,_DE-(_DI*00),MAX(_DE-(_DI*00),_DB/2)),0)))) &
     /10)**_E*_Q**00
_X19=((LININT(LININT &
     (MAX((_DE-(_DI*01)),0),(_DB-_DI)+((_DB-_DI)/1000), &
     (_DB-_DI)+((_DB-_DI)/1000),0,1),1,1,0, &
     MAX((LININT(_DE-(_DI*01),0,0,_DE-(_DI*01),MAX(_DE-(_DI*01),_DB/2)),0)))) &
     /10)**_E*_Q**01
_X18=((LININT(LININT &
     (MAX((_DE-(_DI*02)),0),(_DB-_DI)+((_DB-_DI)/1000), &
     (_DB-_DI)+((_DB-_DI)/1000),0,1),1,1,0, &
     MAX((LININT(_DE-(_DI*02),0,0,_DE-(_DI*02),MAX(_DE-(_DI*02),_DB/2)),0)))) &
     /10)**_E*_Q**02
_X17=((LININT(LININT &
     (MAX((_DE-(_DI*03)),0),(_DB-_DI)+((_DB-_DI)/1000), &
     (_DB-_DI)+((_DB-_DI)/1000),0,1),1,1,0, &
     MAX((LININT(_DE-(_DI*03),0,0,_DE-(_DI*03),MAX(_DE-(_DI*03),_DB/2)),0)))) &
     /10)**_E*_Q**03
_X16=((LININT(LININT &
     (MAX((_DE-(_DI*04)),0),(_DB-_DI)+((_DB-_DI)/1000), &
     (_DB-_DI)+((_DB-_DI)/1000),0,1),1,1,0, &
     MAX((LININT(_DE-(_DI*04),0,0,_DE-(_DI*04),MAX(_DE-(_DI*04),_DB/2)),0)))) &
     /10)**_E*_Q**04
_T20=LININT(LININT(_X20,0.001,0.001,0,1),1,1,0, &
     (MAX((SpMcDBH(1,All,0,LININT(MAX((_DE-(_DI*00))-_DI/2,0), &
      _DI,_DI,0.001,MAX((_DE-(_DI*00))-_DI/2,0)), &
      MAX((_DE-(_DI*00))+_DI/2,0),0.0,999.0,0)),0)))
_T19=LININT(LININT(_X19,0.001,0.001,0,1),1,1,0, &
     (MAX((SpMcDBH(1,All,0,LININT(MAX((_DE-(_DI*01))-_DI/2,0), &
      _DI,_DI,0.001,MAX((_DE-(_DI*01))-_DI/2,0)), &
      MAX((_DE-(_DI*01))+_DI/2,0),0.0,999.0,0)),0)))
_T18=LININT(LININT(_X18,0.001,0.001,0,1),1,1,0, &
     (MAX((SpMcDBH(1,All,0,LININT(MAX((_DE-(_DI*02))-_DI/2,0), &
      _DI,_DI,0.001,MAX((_DE-(_DI*02))-_DI/2,0)), &
      MAX((_DE-(_DI*02))+_DI/2,0),0.0,999.0,0)),0)))
_T17=LININT(LININT(_X17,0.001,0.001,0,1),1,1,0, &
     (MAX((SpMcDBH(1,All,0,LININT(MAX((_DE-(_DI*03))-_DI/2,0), &
      _DI,_DI,0.001,MAX((_DE-(_DI*03))-_DI/2,0)), &
      MAX((_DE-(_DI*03))+_DI/2,0),0.0,999.0,0)),0)))
_T16=LININT(LININT(_X16,0.001,0.001,0,1),1,1,0, &
     (MAX((SpMcDBH(1,All,0,LININT(MAX((_DE-(_DI*04))-_DI/2,0), &
      _DI,_DI,0.001,MAX((_DE-(_DI*04))-_DI/2,0)), &
      MAX((_DE-(_DI*04))+_DI/2,0),0.0,999.0,0)),0)))
_S20=_T20*((LININT(LININT(_X20,0.001,0.001,0,1),1,1,0, &
     (MAX((SpMcDBH(5,All,0,LININT(MAX((_DE-(_DI*00))-_DI/2,0), &
      _DI,_DI,0.001,MAX((_DE-(_DI*00))-_DI/2,0)), &
      MAX((_DE-(_DI*00))+_DI/2,0),0.0,999.0,0)),0)))/10)**_E)
_S19=_T19*((LININT(LININT(_X19,0.001,0.001,0,1),1,1,0, &
     (MAX((SpMcDBH(5,All,0,LININT(MAX((_DE-(_DI*01))-_DI/2,0), &
      _DI,_DI,0.001,MAX((_DE-(_DI*01))-_DI/2,0)), &
      MAX((_DE-(_DI*01))+_DI/2,0),0.0,999.0,0)),0)))/10)**_E)
_S18=_T18*((LININT(LININT(_X18,0.001,0.001,0,1),1,1,0, &
     (MAX((SpMcDBH(5,All,0,LININT(MAX((_DE-(_DI*02))-_DI/2,0), &
      _DI,_DI,0.001,MAX((_DE-(_DI*02))-_DI/2,0)), &
      MAX((_DE-(_DI*02))+_DI/2,0),0.0,999.0,0)),0)))/10)**_E)
_S17=_T17*((LININT(LININT(_X17,0.001,0.001,0,1),1,1,0, &
     (MAX((SpMcDBH(5,All,0,LININT(MAX((_DE-(_DI*03))-_DI/2,0), &
      _DI,_DI,0.001,MAX((_DE-(_DI*03))-_DI/2,0)), &
      MAX((_DE-(_DI*03))+_DI/2,0),0.0,999.0,0)),0)))/10)**_E)
_S16=_T16*((LININT(LININT(_X16,0.001,0.001,0,1),1,1,0, &
     (MAX((SpMcDBH(5,All,0,LININT(MAX((_DE-(_DI*04))-_DI/2,0), &
      _DI,_DI,0.001,MAX((_DE-(_DI*04))-_DI/2,0)), &
      MAX((_DE-(_DI*04))+_DI/2,0),0.0,999.0,0)),0)))/10)**_E)
_ASDI=_S20+_S19+_S18+_S17+_S16
END
ENDIF

* Compute Conversion Factor, Target SDI, and Excess SDI
IF                10
AGE GE 30 AND YEAR GE REGENYR AND _ASDI GE _SDI
THEN
AGPLABEL
All
COMPUTE            0
_CF=_SDI/(_X20+_X19+_X18+_X17+_X16)
_Y20=_X20*_CF
_Y19=_X19*_CF
_Y18=_X18*_CF
_Y17=_X17*_CF
_Y16=_X16*_CF
_TSDI=_Y20+_Y19+_Y18+_Y17+_Y16
_Z20=MAX(_S20-_Y20,0)
_Z19=MAX(_S19-_Y19,0)
_Z18=MAX(_S18-_Y18,0)
_Z17=MAX(_S17-_Y17,0)
_Z16=MAX(_S16-_Y16,0)
_ZSDI=(_ASDI-_TSDI) &
      /MAX(1,(_Z20+_Z19+_Z18+_Z17+_Z16))
_Y21=LININT(LININT(MAX(_ZSDI,0),0.001,0.001,0,1),0.001,0.001,_SDI- &
(SpMcDBH(11,All,0,_DB-(_DI/2),_DE+(_DI/2),0.0,999.0,0)-_LLT*((_LLD/10)**_E)), &
(_LLT*((_LLD/10)**_E)))
END
** Sets Thinning through all DBH Classes
ESTAB
NOSPROUT
END
* Legacy Trees
THINSDI            0   Parms(_Y21,1.00,All,(_DE+(MAX((_LLD-_DE),_DI))-_DI/2), &
(_DE+(MAX((_LLD-_DE),_DI))+_DI/2),2)
THINSDI            0   Parms(_Y21,1.00,All,(_DE+(_DI*01)-_DI/2),999.0,2)
* Managed DBH Classes
THINBTA            0   Parms(LININT(LININT(_Y20,0.001,0.001,0,1),1,1,999.0, &
(_Y20+(_Z20-_Z20*_ZSDI))/(MAX(_X20,0.000001)/_Q**00)),1.00, &
LININT(MAX((_DE-(_DI*00))-_DI/2,0), &
_DI,_DI,0.001,MAX((_DE-(_DI*00))-_DI/2,0)), &
MAX((_DE-(_DI*00))+_DI/2,0),0,999)
THINBTA            0   Parms(LININT(LININT(_Y19,0.001,0.001,0,1),1,1,999.0, &
(_Y19+(_Z19-_Z19*_ZSDI))/(MAX(_X19,0.000001)/_Q**01)),1.00, &
LININT(MAX((_DE-(_DI*01))-_DI/2,0), &
_DI,_DI,0.001,MAX((_DE-(_DI*01))-_DI/2,0)), &
MAX((_DE-(_DI*01))+_DI/2,0),0,999)
THINBTA            0   Parms(LININT(LININT(_Y18,0.001,0.001,0,1),1,1,999.0, &
(_Y18+(_Z18-_Z18*_ZSDI))/(MAX(_X18,0.000001)/_Q**02)),1.00, &
LININT(MAX((_DE-(_DI*02))-_DI/2,0), &
_DI,_DI,0.001,MAX((_DE-(_DI*02))-_DI/2,0)), &
MAX((_DE-(_DI*02))+_DI/2,0),0,999)
THINBTA            0   Parms(LININT(LININT(_Y17,0.001,0.001,0,1),1,1,999.0, &
(_Y17+(_Z17-_Z17*_ZSDI))/(MAX(_X17,0.000001)/_Q**03)),1.00, &
LININT(MAX((_DE-(_DI*03))-_DI/2,0), &
_DI,_DI,0.001,MAX((_DE-(_DI*03))-_DI/2,0)), &
MAX((_DE-(_DI*03))+_DI/2,0),0,999)
THINBTA            0   Parms(LININT(LININT(_Y16,0.001,0.001,0,1),1,1,999.0, &
(_Y16+(_Z16-_Z16*_ZSDI))/(MAX(_X16,0.000001)/_Q**04)),1.00, &
LININT(MAX((_DE-(_DI*04))-_DI/2,0), &
_DI,_DI,0.001,MAX((_DE-(_DI*04))-_DI/2,0)), &
MAX((_DE-(_DI*04))+_DI/2,0),0,999)
FMIN
PILEBURN           0
END
ENDIF

COMMENT
Trigger natural regeneration when >10% of canopy removed or when SDI falls
below 25% of maximum SDI.
Regeneration based on pre-cut TPA >5" by species. SO Variant.
END
IF                20
(ACANCOV)/(BCANCOV)*(100) LT 90 OR ASDI LE (0.25*BSDIMAX)
THEN
AGPLABEL
All
ESTAB
NATURAL            1    Parms(WP, SPMCDBH(1,WP,0,5,999) +&
SPMCDBH(1,WP,0,5,999,0,999,2), 100., 2., 0.5, 0)
NATURAL            1    Parms(SP, SPMCDBH(1,SP,0,5,999) +&
SPMCDBH(1,SP,0,5,999,0,999,2), 100., 2., 0.5, 0)
NATURAL            1    Parms(DF, SPMCDBH(1,DF,0,5,999) +&
SPMCDBH(1,DF,0,5,999,0,999,2), 100., 2., 0.5, 0)
NATURAL            1    Parms(WF, SPMCDBH(1,WF,0,5,999) +&
SPMCDBH(1,WF,0,5,999,0,999,2), 100., 2., 0.5, 0)
NATURAL            1    Parms(MH, SPMCDBH(1,MH,0,5,999) +&
SPMCDBH(1,MH,0,5,999,0,999,2), 100., 2., 0.5, 0)
NATURAL            1    Parms(IC, SPMCDBH(1,IC,0,5,999) +&
SPMCDBH(1,IC,0,5,999,0,999,2), 100., 2., 0.5, 0)
NATURAL            1    Parms(LP, SPMCDBH(1,LP,0,5,999) +&
SPMCDBH(1,LP,0,5,999,0,999,2), 100., 2., 0.5, 0)
NATURAL            1    Parms(ES, SPMCDBH(1,ES,0,5,999) +&
SPMCDBH(1,ES,0,5,999,0,999,2), 100., 2., 0.5, 0)
NATURAL            1    Parms(SH, SPMCDBH(1,SH,0,5,999) +&
SPMCDBH(1,SH,0,5,999,0,999,2), 100., 2., 0.5, 0)
NATURAL            1    Parms(PP, SPMCDBH(1,PP,0,5,999) +&
SPMCDBH(1,PP,0,5,999,0,999,2), 100., 2., 0.5, 0)
NATURAL            1    Parms(WJ, SPMCDBH(1,WJ,0,5,999) +&
SPMCDBH(1,WJ,0,5,999,0,999,2), 100., 2., 0.5, 0)
NATURAL            1    Parms(GF, SPMCDBH(1,GF,0,5,999) +&
SPMCDBH(1,GF,0,5,999,0,999,2), 100., 2., 0.5, 0)
NATURAL            1    Parms(AF, SPMCDBH(1,AF,0,5,999) +&
SPMCDBH(1,AF,0,5,999,0,999,2), 100., 2., 0.5, 0)
NATURAL            1    Parms(SF, SPMCDBH(1,SF,0,5,999) +&
SPMCDBH(1,SF,0,5,999,0,999,2), 100., 2., 0.5, 0)
NATURAL            1    Parms(NF, SPMCDBH(1,NF,0,5,999) +&
SPMCDBH(1,NF,0,5,999,0,999,2), 100., 2., 0.5, 0)
NATURAL            1    Parms(WB, SPMCDBH(1,WB,0,5,999) +&
SPMCDBH(1,WB,0,5,999,0,999,2), 100., 2., 0.5, 0)
NATURAL            1    Parms(WL, SPMCDBH(1,WL,0,5,999) +&
SPMCDBH(1,WL,0,5,999,0,999,2), 100., 2., 0.5, 0)
NATURAL            1    Parms(RC, SPMCDBH(1,RC,0,5,999) +&
SPMCDBH(1,RC,0,5,999,0,999,2), 100., 2., 0.5, 0)
NATURAL            1    Parms(WH, SPMCDBH(1,WH,0,5,999) +&
SPMCDBH(1,WH,0,5,999,0,999,2), 100., 2., 0.5, 0)
NATURAL            1    Parms(PY, SPMCDBH(1,PY,0,5,999) +&
SPMCDBH(1,PY,0,5,999,0,999,2), 100., 2., 0.5, 0)
NATURAL            1    Parms(WA, SPMCDBH(1,WA,0,5,999) +&
SPMCDBH(1,WA,0,5,999,0,999,2), 100., 2., 0.5, 0)
NATURAL            1    Parms(RA, SPMCDBH(1,RA,0,5,999) +&
SPMCDBH(1,RA,0,5,999,0,999,2), 100., 2., 0.5, 0)
NATURAL            1    Parms(BM, SPMCDBH(1,BM,0,5,999) +&
SPMCDBH(1,BM,0,5,999,0,999,2), 100., 2., 0.5, 0)
NATURAL            1    Parms(AS, SPMCDBH(1,AS,0,5,999) +&
SPMCDBH(1,AS,0,5,999,0,999,2), 100., 2., 0.5, 0)
NATURAL            1    Parms(CW, SPMCDBH(1,CW,0,5,999) +&
SPMCDBH(1,CW,0,5,999,0,999,2), 100., 2., 0.5, 0)
NATURAL            1    Parms(CH, SPMCDBH(1,CH,0,5,999) +&
SPMCDBH(1,CH,0,5,999,0,999,2), 100., 2., 0.5, 0)
NATURAL            1    Parms(WO, SPMCDBH(1,WO,0,5,999) +&
SPMCDBH(1,WO,0,5,999,0,999,2), 100., 2., 0.5, 0)
NATURAL            1    Parms(WI, SPMCDBH(1,WI,0,5,999) +&
SPMCDBH(1,WI,0,5,999,0,999,2), 100., 2., 0.5, 0)
NATURAL            1    Parms(GC, SPMCDBH(1,GC,0,5,999) +&
SPMCDBH(1,GC,0,5,999,0,999,2), 100., 2., 0.5, 0)
NATURAL            1    Parms(MC, SPMCDBH(1,MC,0,5,999) +&
SPMCDBH(1,MC,0,5,999,0,999,2), 100., 2., 0.5, 0)
NATURAL            1    Parms(MB, SPMCDBH(1,MB,0,5,999) +&
SPMCDBH(1,MB,0,5,999,0,999,2), 100., 2., 0.5, 0)
NATURAL            1    Parms(OS, SPMCDBH(1,OS,0,5,999) +&
SPMCDBH(1,OS,0,5,999,0,999,2), 100., 2., 0.5, 0)
NATURAL            1    Parms(OH, SPMCDBH(1,OH,0,5,999) +&
SPMCDBH(1,OH,0,5,999,0,999,2), 100., 2., 0.5, 0)
END
ENDIF

PROCESS
CLOSE             50
STOP