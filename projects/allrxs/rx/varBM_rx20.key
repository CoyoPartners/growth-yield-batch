STATS
STDIDENT
{{condid}} {{variant}}_{{rx}}_{{condid}}_{{site_class}}_{{climate}}_{{offset}}
{{stdinfo}}
STANDCN
{{variant}}_{{rx}}_{{condid}}_{{site_class}}_{{climate}}_{{offset}}
DESIGN            -1         1
INVYEAR         2013
TIMEINT                      5
NUMCYCLE          20
TREEFMT
(I6,I3,F6.0,I1,A3,F5.1,F3.1,F3.0,F3.0,F4.1,I1,6I2,I1,I1,I2,I3,I3,I1,I1,F3.0)
TREEDATA          50
OPEN              50
{{condid}}.fvs
TREEDATA          50
TREELIST          0.                   1
TREELIST          0.                   1                   1
CUTLIST           0.                   1
ATRTLIST          0.                   1
STRCLASS           0
NOECHO
ESTAB
OUTPUT             0
END
DELOTAB            1
DELOTAB            2

COMMENT
Override default site index. Corresponds to Site Class IV for EC, SO, and BM
variants.
END
{{sitecode}}

COMMENT
Define "OFFSET" value, should be 0 or in multiples of 5 (cycle length).
END
COMPUTE
OFFSET = {{offset}}
END

COMMENT
Determine the year in which repeated commercial thinnings commence (REGENYR).
END
IF               999
BSDI GE 0.65*BSDIMAX
THEN
AGPLABEL
All
COMPUTE
CYC1 = CYCLE
END
ENDIF
IF               999
AGE GE 30 AND CYCLE LE CYC1
THEN
AGPLABEL
All
COMPUTE
REGENYR = YEAR + OFFSET
END
ENDIF
IF               999
AGE LT 30 AND CYCLE EQ 1
THEN 
AGPLABEL
All
COMPUTE
REGENYR = (30 + OFFSET - AGE) + YEAR
END
ENDIF

COMMENT
Create a code indicating what type (if any) of harvesting occurred each cycle.
CUT_TYPE codes:
0 = No cut this cycle
1 = Pre-commercial thin this cycle
2 = Commercial thin this cycle
3 = Regeneration harvest this cycle
END
IF 
EVPHASE EQ 2
THEN
AGPLABEL
All
COMPUTE            0
CUT_TYPE = LININT(Age,30+OFFSET,30+OFFSET,0,2)*CUT
END
ENDIF

COMMENT
Set log grades and merchantability parameters.
END
{{include.BM_merch}}

COMMENT
Compute fire hazard rating based on Hugget, Abt, and Shepperd (2008):
0 = very low risk
1 = low risk
2 = medium risk
3 = medium-high risk
4 = high risk
END
{{include.fire_hazard}}

COMMENT
Trigger climate change impacts.
Climate Scenario = {{climate}}
END
CLIMATE
CLIMDATA
{{climate}}
{{condid}}.cli
CLIMREPT
AUTOESTB
{{include.climate_mortality}}
END

COMMENT
Create carbon reports with units of metric tonnes C per acre.
END
FMIN
CARBREPT                               5
CARBCUT                                5   
CARBCALC           0         2
END

COMMENT
Turn off diameter and height growth calibration and dwarf mistletoe components.
END
NOCALIB
MISTOE
MISTOFF


COMMENT
Define conifers as a species group.  BM variant.
END
SPGROUP       CONSPP
AF DF ES GF LM LP MH OS PP PY WB WJ WL WP YC

COMMENT
Compute variables used as inputs for cost model.  Variables provide average
cubic foot volume of harvested trees ("CF" at end of name), number of trees
per acre harvested ("TPA" at end of name), and proportion of harvested volume
coming from hardwoods ("HW" at end of name) in diameter classes 2"<CH<5"
5"<SM<20" and LG>=20" (CH, SM, LG at beginning of name).
END
{{include.cost_model_inputs}}

COMMENT
Compute Northern spotted owl suitability rating and supporting variables.
END
{{include.BM_spotted_owl}}

COMMENT
Compute susceptibility ratings for Mountain Pine Beetle in Ponderosa Pine
(PP_BTL) and Lodgepole Pine (LP_BTL). Ratings for PP_BTL, based on Munson
and Anhold (1995) and described in User's Guide to the Post-Processors 
for the Forest Vegetation Simulator (Van Dyck 2005):
3-4  = Low
5-8  = Moderate
9-11 = High
Ratings for LP_BTL, based on Randall and Tensmeyer (2000):
1    = Extremely low
2-7  = Low
8-13 = Moderate
14   = High
END
{{include.pine_beetle}}

COMMENT
Compute a susceptibility rating for spruce beetle outbreak in 
Englemann Spruce.  Ratings for ES_BTL, based on Schmid and Frye 
(1976) and described in User's Guide to Post-Processors for the
Forest Vegetation Simulator (Van Dyck 2005):
4-5   = LOW
6     = LOW-MODERATE
7-9   = MODERATE
10    = MODERATE-HIGH
11-12 = HIGH
END
{{include.spruce_beetle}}

COMMENT
Species diversity metrics for the BM variant.  
SPPRICH is species richness (# of species)
SPPSIMP is inverse Simpson index based on trees per acre
END
IF
EVPHASE EQ 2
THEN
AGPLABEL
All
COMPUTE            0
SPPRICH = LININT(SPMCDBH(1,1,0),0.01,0.01,0,1)&
+LININT(SPMCDBH(1,2,0),0.01,0.01,0,1)+LININT(SPMCDBH(1,3,0),0.01,0.01,0,1)&
+LININT(SPMCDBH(1,4,0),0.01,0.01,0,1)+LININT(SPMCDBH(1,5,0),0.01,0.01,0,1)&
+LININT(SPMCDBH(1,6,0),0.01,0.01,0,1)+LININT(SPMCDBH(1,7,0),0.01,0.01,0,1)&
+LININT(SPMCDBH(1,8,0),0.01,0.01,0,1)+LININT(SPMCDBH(1,9,0),0.01,0.01,0,1)&
+LININT(SPMCDBH(1,10,0),0.01,0.01,0,1)+LININT(SPMCDBH(1,11,0),0.01,0.01,0,1)&
+LININT(SPMCDBH(1,12,0),0.01,0.01,0,1)+LININT(SPMCDBH(1,13,0),0.01,0.01,0,1)&
+LININT(SPMCDBH(1,14,0),0.01,0.01,0,1)+LININT(SPMCDBH(1,15,0),0.01,0.01,0,1)&
+LININT(SPMCDBH(1,16,0),0.01,0.01,0,1)+LININT(SPMCDBH(1,17,0),0.01,0.01,0,1)&
+LININT(SPMCDBH(1,18,0),0.01,0.01,0,1)
SPPSIMP = 1/((SPMCDBH(1,1,0)/SPMCDBH(1,0,0))**2&
+(SPMCDBH(1,2,0)/SPMCDBH(1,0,0))**2+(SPMCDBH(1,3,0)/SPMCDBH(1,0,0))**2&
+(SPMCDBH(1,4,0)/SPMCDBH(1,0,0))**2+(SPMCDBH(1,5,0)/SPMCDBH(1,0,0))**2&
+(SPMCDBH(1,6,0)/SPMCDBH(1,0,0))**2+(SPMCDBH(1,7,0)/SPMCDBH(1,0,0))**2&
+(SPMCDBH(1,8,0)/SPMCDBH(1,0,0))**2+(SPMCDBH(1,9,0)/SPMCDBH(1,0,0))**2&
+(SPMCDBH(1,10,0)/SPMCDBH(1,0,0))**2+(SPMCDBH(1,11,0)/SPMCDBH(1,0,0))**2&
+(SPMCDBH(1,12,0)/SPMCDBH(1,0,0))**2+(SPMCDBH(1,13,0)/SPMCDBH(1,0,0))**2&
+(SPMCDBH(1,14,0)/SPMCDBH(1,0,0))**2+(SPMCDBH(1,15,0)/SPMCDBH(1,0,0))**2&
+(SPMCDBH(1,16,0)/SPMCDBH(1,0,0))**2+(SPMCDBH(1,17,0)/SPMCDBH(1,0,0))**2&
+(SPMCDBH(1,18,0)/SPMCDBH(1,0,0))**2)
END
ENDIF

COMMENT
Preferentially remove WJ in any cutting, only applies to thin from below,
or thin from above.  Does not apply when thinning throughout a diameter
distribution.
END
SPECPREF           1        WJ        50

COMMENT
Simulate thin from below every 10 years after age 30 to achieve complex uneven-age
forest structure.  Reverse J-shape diameter distribution targeting 65% maximum SDI.
Pile and burn slash after harvesting.  Adapted from script by Don Vandendriesche.
END
IF                10
AGE GE 30 AND YEAR GE REGENYR
THEN
AGPLABEL
All
*   Definition of Compute Variables:
*    _SDI = Target Stand Density Index
*      _Q = Q-Factor
*     _DB = Minimum Diameter Class
*     _DE = Maximum Diameter Class
*     _DI = Diameter Class Interval
*    _LLT = Number of Legacy Trees
*    _LLD = Diameter of Legacy Trees
*      _C = 0.00545415 (BA conversion constant)
*      _E = 1.605 SDI Exponent
COMPUTE            1
_SDI=0.55*BSDIMAX
_Q  =1.4
_DB =0
_DE =25
_DI =5
_LLT=12.
_LLD=40.
_C  =0.00545415
_E  =1.605
END
ENDIF

* Compute Actual SDI, DBH Classes, Trial TPA, and Trial SDI/DBH CLASS
IF                 10
AGE GE 30 AND YEAR GE REGENYR
THEN
AGPLABEL
All
COMPUTE            0
_X20=((LININT(LININT &
     (MAX((_DE-(_DI*00)),0),(_DB-_DI)+((_DB-_DI)/1000), &
     (_DB-_DI)+((_DB-_DI)/1000),0,1),1,1,0, &
     MAX((LININT(_DE-(_DI*00),0,0,_DE-(_DI*00),MAX(_DE-(_DI*00),_DB/2)),0)))) &
     /10)**_E*_Q**00
_X19=((LININT(LININT &
     (MAX((_DE-(_DI*01)),0),(_DB-_DI)+((_DB-_DI)/1000), &
     (_DB-_DI)+((_DB-_DI)/1000),0,1),1,1,0, &
     MAX((LININT(_DE-(_DI*01),0,0,_DE-(_DI*01),MAX(_DE-(_DI*01),_DB/2)),0)))) &
     /10)**_E*_Q**01
_X18=((LININT(LININT &
     (MAX((_DE-(_DI*02)),0),(_DB-_DI)+((_DB-_DI)/1000), &
     (_DB-_DI)+((_DB-_DI)/1000),0,1),1,1,0, &
     MAX((LININT(_DE-(_DI*02),0,0,_DE-(_DI*02),MAX(_DE-(_DI*02),_DB/2)),0)))) &
     /10)**_E*_Q**02
_X17=((LININT(LININT &
     (MAX((_DE-(_DI*03)),0),(_DB-_DI)+((_DB-_DI)/1000), &
     (_DB-_DI)+((_DB-_DI)/1000),0,1),1,1,0, &
     MAX((LININT(_DE-(_DI*03),0,0,_DE-(_DI*03),MAX(_DE-(_DI*03),_DB/2)),0)))) &
     /10)**_E*_Q**03
_X16=((LININT(LININT &
     (MAX((_DE-(_DI*04)),0),(_DB-_DI)+((_DB-_DI)/1000), &
     (_DB-_DI)+((_DB-_DI)/1000),0,1),1,1,0, &
     MAX((LININT(_DE-(_DI*04),0,0,_DE-(_DI*04),MAX(_DE-(_DI*04),_DB/2)),0)))) &
     /10)**_E*_Q**04
_T20=LININT(LININT(_X20,0.001,0.001,0,1),1,1,0, &
     (MAX((SpMcDBH(1,All,0,LININT(MAX((_DE-(_DI*00))-_DI/2,0), &
      _DI,_DI,0.001,MAX((_DE-(_DI*00))-_DI/2,0)), &
      MAX((_DE-(_DI*00))+_DI/2,0),0.0,999.0,0)),0)))
_T19=LININT(LININT(_X19,0.001,0.001,0,1),1,1,0, &
     (MAX((SpMcDBH(1,All,0,LININT(MAX((_DE-(_DI*01))-_DI/2,0), &
      _DI,_DI,0.001,MAX((_DE-(_DI*01))-_DI/2,0)), &
      MAX((_DE-(_DI*01))+_DI/2,0),0.0,999.0,0)),0)))
_T18=LININT(LININT(_X18,0.001,0.001,0,1),1,1,0, &
     (MAX((SpMcDBH(1,All,0,LININT(MAX((_DE-(_DI*02))-_DI/2,0), &
      _DI,_DI,0.001,MAX((_DE-(_DI*02))-_DI/2,0)), &
      MAX((_DE-(_DI*02))+_DI/2,0),0.0,999.0,0)),0)))
_T17=LININT(LININT(_X17,0.001,0.001,0,1),1,1,0, &
     (MAX((SpMcDBH(1,All,0,LININT(MAX((_DE-(_DI*03))-_DI/2,0), &
      _DI,_DI,0.001,MAX((_DE-(_DI*03))-_DI/2,0)), &
      MAX((_DE-(_DI*03))+_DI/2,0),0.0,999.0,0)),0)))
_T16=LININT(LININT(_X16,0.001,0.001,0,1),1,1,0, &
     (MAX((SpMcDBH(1,All,0,LININT(MAX((_DE-(_DI*04))-_DI/2,0), &
      _DI,_DI,0.001,MAX((_DE-(_DI*04))-_DI/2,0)), &
      MAX((_DE-(_DI*04))+_DI/2,0),0.0,999.0,0)),0)))
_S20=_T20*((LININT(LININT(_X20,0.001,0.001,0,1),1,1,0, &
     (MAX((SpMcDBH(5,All,0,LININT(MAX((_DE-(_DI*00))-_DI/2,0), &
      _DI,_DI,0.001,MAX((_DE-(_DI*00))-_DI/2,0)), &
      MAX((_DE-(_DI*00))+_DI/2,0),0.0,999.0,0)),0)))/10)**_E)
_S19=_T19*((LININT(LININT(_X19,0.001,0.001,0,1),1,1,0, &
     (MAX((SpMcDBH(5,All,0,LININT(MAX((_DE-(_DI*01))-_DI/2,0), &
      _DI,_DI,0.001,MAX((_DE-(_DI*01))-_DI/2,0)), &
      MAX((_DE-(_DI*01))+_DI/2,0),0.0,999.0,0)),0)))/10)**_E)
_S18=_T18*((LININT(LININT(_X18,0.001,0.001,0,1),1,1,0, &
     (MAX((SpMcDBH(5,All,0,LININT(MAX((_DE-(_DI*02))-_DI/2,0), &
      _DI,_DI,0.001,MAX((_DE-(_DI*02))-_DI/2,0)), &
      MAX((_DE-(_DI*02))+_DI/2,0),0.0,999.0,0)),0)))/10)**_E)
_S17=_T17*((LININT(LININT(_X17,0.001,0.001,0,1),1,1,0, &
     (MAX((SpMcDBH(5,All,0,LININT(MAX((_DE-(_DI*03))-_DI/2,0), &
      _DI,_DI,0.001,MAX((_DE-(_DI*03))-_DI/2,0)), &
      MAX((_DE-(_DI*03))+_DI/2,0),0.0,999.0,0)),0)))/10)**_E)
_S16=_T16*((LININT(LININT(_X16,0.001,0.001,0,1),1,1,0, &
     (MAX((SpMcDBH(5,All,0,LININT(MAX((_DE-(_DI*04))-_DI/2,0), &
      _DI,_DI,0.001,MAX((_DE-(_DI*04))-_DI/2,0)), &
      MAX((_DE-(_DI*04))+_DI/2,0),0.0,999.0,0)),0)))/10)**_E)
_ASDI=_S20+_S19+_S18+_S17+_S16
END
ENDIF

* Compute Conversion Factor, Target SDI, and Excess SDI
IF                10
AGE GE 30 AND YEAR GE REGENYR AND _ASDI GE _SDI
THEN
AGPLABEL
All
COMPUTE            0
_CF=_SDI/(_X20+_X19+_X18+_X17+_X16)
_Y20=_X20*_CF
_Y19=_X19*_CF
_Y18=_X18*_CF
_Y17=_X17*_CF
_Y16=_X16*_CF
_TSDI=_Y20+_Y19+_Y18+_Y17+_Y16
_Z20=MAX(_S20-_Y20,0)
_Z19=MAX(_S19-_Y19,0)
_Z18=MAX(_S18-_Y18,0)
_Z17=MAX(_S17-_Y17,0)
_Z16=MAX(_S16-_Y16,0)
_ZSDI=(_ASDI-_TSDI) &
      /MAX(1,(_Z20+_Z19+_Z18+_Z17+_Z16))
_Y21=LININT(LININT(MAX(_ZSDI,0),0.001,0.001,0,1),0.001,0.001,_SDI- &
(SpMcDBH(11,All,0,_DB-(_DI/2),_DE+(_DI/2),0.0,999.0,0)-_LLT*((_LLD/10)**_E)), &
(_LLT*((_LLD/10)**_E)))
END
** Sets Thinning through all DBH Classes
ESTAB
NOSPROUT
END
* Legacy Trees
THINSDI            0   Parms(_Y21,1.00,All,(_DE+(MAX((_LLD-_DE),_DI))-_DI/2), &
(_DE+(MAX((_LLD-_DE),_DI))+_DI/2),2)
THINSDI            0   Parms(_Y21,1.00,All,(_DE+(_DI*01)-_DI/2),999.0,2)
* Managed DBH Classes
THINBTA            0   Parms(LININT(LININT(_Y20,0.001,0.001,0,1),1,1,999.0, &
(_Y20+(_Z20-_Z20*_ZSDI))/(MAX(_X20,0.000001)/_Q**00)),1.00, &
LININT(MAX((_DE-(_DI*00))-_DI/2,0), &
_DI,_DI,0.001,MAX((_DE-(_DI*00))-_DI/2,0)), &
MAX((_DE-(_DI*00))+_DI/2,0),0,999)
THINBTA            0   Parms(LININT(LININT(_Y19,0.001,0.001,0,1),1,1,999.0, &
(_Y19+(_Z19-_Z19*_ZSDI))/(MAX(_X19,0.000001)/_Q**01)),1.00, &
LININT(MAX((_DE-(_DI*01))-_DI/2,0), &
_DI,_DI,0.001,MAX((_DE-(_DI*01))-_DI/2,0)), &
MAX((_DE-(_DI*01))+_DI/2,0),0,999)
THINBTA            0   Parms(LININT(LININT(_Y18,0.001,0.001,0,1),1,1,999.0, &
(_Y18+(_Z18-_Z18*_ZSDI))/(MAX(_X18,0.000001)/_Q**02)),1.00, &
LININT(MAX((_DE-(_DI*02))-_DI/2,0), &
_DI,_DI,0.001,MAX((_DE-(_DI*02))-_DI/2,0)), &
MAX((_DE-(_DI*02))+_DI/2,0),0,999)
THINBTA            0   Parms(LININT(LININT(_Y17,0.001,0.001,0,1),1,1,999.0, &
(_Y17+(_Z17-_Z17*_ZSDI))/(MAX(_X17,0.000001)/_Q**03)),1.00, &
LININT(MAX((_DE-(_DI*03))-_DI/2,0), &
_DI,_DI,0.001,MAX((_DE-(_DI*03))-_DI/2,0)), &
MAX((_DE-(_DI*03))+_DI/2,0),0,999)
THINBTA            0   Parms(LININT(LININT(_Y16,0.001,0.001,0,1),1,1,999.0, &
(_Y16+(_Z16-_Z16*_ZSDI))/(MAX(_X16,0.000001)/_Q**04)),1.00, &
LININT(MAX((_DE-(_DI*04))-_DI/2,0), &
_DI,_DI,0.001,MAX((_DE-(_DI*04))-_DI/2,0)), &
MAX((_DE-(_DI*04))+_DI/2,0),0,999)
FMIN
PILEBURN           0
END
ENDIF

PROCESS
CLOSE             50
STOP