README

---WHERE TO GET THE DATA---
If the CSVs don't exist, and you want to start from scratch, they can be found at:
projects/projects/2013/BLMForestTool/Data/Source/climate/Climate-FVS/OR_Climate_Grid/FVSClimAttrs_xof4.csv (where x is in [1,2,3,4])

If You don't want to build the DB, find it zipped (with indexing) at:
projects/projects/2013/BLMForestTool/Data/Source/climate/Climate-FVS/OR_Climate_Grid/orclimgrid_indexed.sqlite.bz2

If you just want the Geotifs of the current and estimated suitability values, go here:
projects/projects/2013/BLMForestTool/Data/Processed/climate/usfw_viability/xxxxxxxx.tif

If you want the Geotifs of the current and estimated suitability categories:
projects/projects/2013/BLMForestTool/Data/Processed/climate/usfw_viability_reclass/xxxxxxx_classed.tif

If you want the final Geotifs mapping the change between major categories from 1990 to 2060:
projects/projects/2013/BLMForestTool/Data/Processed/climate/usfw_viability_delta/xxxxxxx_change.tif

---WHERE THIS DATA CAME FROM---
Unzip the csvs tar in the csvs folder.
Run csv2sqlite.py on each to collect them all in one sqlite database.

Once you know which climate, rcp, and year you're interested in creating a geotiff for, use the climquery.py program to create these* (see make_tifs.sh for examples).

Each suitability value falls into one of 4 categories (defined in start_class.cfg and end_class.cfg). To create a geotiff of just the categories, run reclass_raster.py with the approprite cfg (see create_class_rasters.sh).

The tifs in change_class/ are the final result when the 1990 classes (10, 20, 30, 40) are compared (added) to the 2060 classes (1, 2, 3, 4). The resulting values give you a grid like below, where Up-Left is "wasn't suitable, and won't be,", Down-Left is "was ideal, will be unsuitable", Up-Right is "wasn't suitable, but will be ideal", and Down-Right is "was and will be ideal".

Classes:
    2060 --->

1   11  12  13  14
9   21  22  23  24
9   31  32  33  34
0   41  42  43  44

Add the 1990 raster values to the 2060 raster values: 
i.e. 'ideal 1990' + 'ideal 2060' -> 40 + 4 = 44 (no change) 
     'ideal 1990' + 'poor 2060'  -> 40 + 1 = 41 (major regression)

This can be done either writing a script similar to reclass_raster and using numpy to add the rasters together, or by using the raster calculator built into QGIS, which is what we did this time.

The current style to be used for displaying this in QGIS is saved with them (change_class/change_class_grid_styles.qml), but the GIS dept should make them pretty.